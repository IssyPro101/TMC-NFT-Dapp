{"ast":null,"code":"import _regeneratorRuntime from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/israeladelaja/Desktop/TamaNFT/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import TamaNFT from\"./contracts/TamaNFT.json\";import getWeb3 from\"./getWeb3\";import\"./App.css\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={storageValue:0,web3:null,accounts:null,contract:null,balanceOf:0,totalSupply:0,maxMint:0,price:0};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3,account,networkId,deployedNetwork,instance,balanceOf,totalSupply,maxMint,price;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getWeb3();case 3:web3=_context.sent;_context.next=6;return window.ethereum.request({method:'eth_accounts'});case 6:account=_context.sent;account=account[0].toLowerCase();// Get the contract instance.\n_context.next=10;return web3.eth.net.getId();case 10:networkId=_context.sent;deployedNetwork=TamaNFT.networks[networkId];instance=new web3.eth.Contract(TamaNFT.abi,deployedNetwork&&deployedNetwork.address);_context.next=15;return instance.methods.balanceOf(account).call();case 15:balanceOf=_context.sent;_context.next=18;return instance.methods.totalSupply().call();case 18:totalSupply=_context.sent;_context.next=21;return instance.methods.MAX_MINT().call();case 21:maxMint=_context.sent;_context.next=24;return instance.methods.price().call();case 24:price=_context.sent;// Set web3, accounts, and contract to the state, and then proceed with an\n// example of interacting with the contract's methods.\n_this.setState({web3:web3,account:account,contract:instance,balanceOf:balanceOf,totalSupply:totalSupply,maxMint:maxMint,price:price});_context.next=32;break;case 28:_context.prev=28;_context.t0=_context[\"catch\"](0);// Catch any errors for any of the above operations.\nalert(\"Failed to load web3, accounts, or contract. Check console for details.\");console.error(_context.t0);case 32:case\"end\":return _context.stop();}}},_callee,null,[[0,28]]);}));_this.mint=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var mintAmount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:mintAmount=document.getElementById(\"mint-amount\").value;_context2.next=3;return _this.state.contract.methods.mint(mintAmount).send({from:_this.state.account,value:_this.state.price*mintAmount});case 3:window.location.reload();case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;if(!this.state.web3){return React.createElement(\"div\",null,\"Loading Web3, accounts, and contract...\");}return React.createElement(\"div\",null,React.createElement(\"nav\",{className:\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\"},React.createElement(\"a\",{className:\"navbar-brand col-sm-3 col-md-2 mr-0\",href:\"http://www.dappuniversity.com/bootcamp\",target:\"_blank\",rel:\"noopener noreferrer\"},React.createElement(\"img\",{class:\"App-logo\",src:\"https://bafybeic6ma3negyicvyiw234kqlbvrxdvpo7stwdygjw3axis5alaqod7u.ipfs.infura-ipfs.io/1.png\",alt:\"app-logo\"}),\"Tama Mint\"),React.createElement(\"div\",{id:\"user-info\"},React.createElement(\"small\",{className:\"text-secondary\"},React.createElement(\"small\",{id:\"account\"},this.state.account)),React.createElement(\"small\",{className:\"text-secondary\"},React.createElement(\"small\",{id:\"account-short\"},this.state.account.substring(0,7),\"...\")))),React.createElement(\"div\",{className:\"container-fluid mt-5\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"main\",{role:\"main\",className:\"col-lg-12 d-flex text-center\"},React.createElement(\"div\",{class:\"container\"},React.createElement(\"h1\",{id:\"title\"},\"Mint TAMA Monster Club NFTs!\"),React.createElement(\"a\",{id:\"link\",href:\"https://rinkeby.etherscan.io/address/\".concat(this.state.contract._address),target:\"_blank\",rel:\"noopener noreferrer\"},\"Contract Address\"),React.createElement(\"br\",null),React.createElement(\"a\",{id:\"link\",href:\"https://testnets.opensea.io/collection/tama-monster-club-v2\",target:\"_blank\",rel:\"noopener noreferrer\"},\"OpenSea Collection\"),React.createElement(\"h1\",null,this.state.totalSupply,\"/\",this.state.maxMint,\" NFTs minted so far.\"),React.createElement(\"p\",null,\"You have currently minted \",this.state.balanceOf,\" NFTs\"),React.createElement(\"p\",null,\"You can only mint 20 NFTs maximum.\"),React.createElement(\"p\",null,\"The price to mint is \",this.state.price/Math.pow(10,18),\" ether\"),React.createElement(\"input\",{id:\"mint-amount\",class:\"change\",placeholder:\"Enter Number of NFTs to mint\"}),React.createElement(\"button\",{id:\"mint\",class:\"change-button\",onClick:function onClick(){return _this2.mint();}},\"Mint\"))))));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/TamaNFT/client/src/App.js"],"names":["React","Component","TamaNFT","getWeb3","App","state","storageValue","web3","accounts","contract","balanceOf","totalSupply","maxMint","price","componentDidMount","window","ethereum","request","method","account","toLowerCase","eth","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","methods","call","MAX_MINT","setState","alert","console","error","mint","mintAmount","document","getElementById","value","send","from","location","reload","substring","_address"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TamaNFT from \"./contracts/TamaNFT.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null, balanceOf: 0, totalSupply: 0, maxMint: 0, price: 0 };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      let account = await window.ethereum.request({ method: 'eth_accounts' });\n      account = account[0].toLowerCase();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = TamaNFT.networks[networkId];\n      const instance = new web3.eth.Contract(\n        TamaNFT.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      let balanceOf = await instance.methods.balanceOf(account).call();\n      let totalSupply = await instance.methods.totalSupply().call();\n      let maxMint = await instance.methods.MAX_MINT().call();\n      let price = await instance.methods.price().call();\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account, contract: instance, balanceOf, totalSupply, maxMint, price });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  mint = async () => {\n    let mintAmount = document.getElementById(\"mint-amount\").value;\n    await this.state.contract.methods.mint(mintAmount).send({from: this.state.account, value: this.state.price*mintAmount});\n    window.location.reload()\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div>\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"http://www.dappuniversity.com/bootcamp\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img class=\"App-logo\" src=\"https://bafybeic6ma3negyicvyiw234kqlbvrxdvpo7stwdygjw3axis5alaqod7u.ipfs.infura-ipfs.io/1.png\" alt=\"app-logo\"/>\n          Tama Mint\n        </a>\n\n        <div id=\"user-info\">\n          <small className='text-secondary'>\n            <small id='account'>{this.state.account}</small>\n          </small>\n          <small className='text-secondary'>\n            <small id='account-short'>{this.state.account.substring(0, 7)}...</small>\n          </small> \n        </div>\n\n      </nav>\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n            <div class=\"container\">\n              <h1 id=\"title\">Mint TAMA Monster Club NFTs!</h1>\n              <a id=\"link\" href={`https://rinkeby.etherscan.io/address/${this.state.contract._address}`} target=\"_blank\" rel=\"noopener noreferrer\">Contract Address</a>\n              <br/>\n              <a id=\"link\" href=\"https://testnets.opensea.io/collection/tama-monster-club-v2\" target=\"_blank\" rel=\"noopener noreferrer\">OpenSea Collection</a>\n              <h1>{this.state.totalSupply}/{this.state.maxMint} NFTs minted so far.</h1>\n              <p>You have currently minted {this.state.balanceOf} NFTs</p>\n              <p>You can only mint 20 NFTs maximum.</p>\n              <p>The price to mint is {this.state.price/10**18} ether</p>\n              <input id=\"mint-amount\" class=\"change\" placeholder=\"Enter Number of NFTs to mint\"></input>\n              <button id=\"mint\" class=\"change-button\" onClick={() => this.mint()}>Mint</button>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}